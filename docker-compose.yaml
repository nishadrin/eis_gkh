version: '3.6'

services:
  db:
    image: postgres:12
    container_name: postgres
    env_file: .env
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
        interval: 10s
        timeout: 30s
        retries: 10

  web:
    build: ./gkh_bill/
    container_name: api
    command: gunicorn --bind 0.0.0.0:8000 gkh_bill.wsgi:application --workers 3
    ports:
      - 8000:8000
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  migrate:
    build: ./gkh_bill/
    container_name: django_migrate
    command: python manage.py migrate
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:4
    container_name: redis
    restart: always
    ports:
      - '6379:6379'

  celery:
    build: ./gkh_bill/
    container_name: celery
    entrypoint: celery
    command: -A gkh_bill.celery.app worker --loglevel=DEBUG
    restart: always
    links:
      - redis
    env_file:
      - .env
    depends_on:
      - redis
      - web

  flower:
    container_name: flower
    build: ./gkh_bill/
    entrypoint: celery
    command: -A gkh_bill.celery.app flower
    restart: always
    links:
      - redis
    env_file:
      - .env
    depends_on:
      - celery
      - redis
    ports:
      - '5555:5555'

volumes:
  postgres: